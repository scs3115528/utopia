// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuzzArgsProfile.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_FuzzArgsProfile_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_FuzzArgsProfile_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_FuzzArgsProfile_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_FuzzArgsProfile_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_FuzzArgsProfile_2eproto;
namespace AutoFuzz {
class FuzzArgsProfile;
class FuzzArgsProfileDefaultTypeInternal;
extern FuzzArgsProfileDefaultTypeInternal _FuzzArgsProfile_default_instance_;
}  // namespace AutoFuzz
PROTOBUF_NAMESPACE_OPEN
template<> ::AutoFuzz::FuzzArgsProfile* Arena::CreateMaybeMessage<::AutoFuzz::FuzzArgsProfile>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AutoFuzz {

// ===================================================================

class FuzzArgsProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AutoFuzz.FuzzArgsProfile) */ {
 public:
  inline FuzzArgsProfile() : FuzzArgsProfile(nullptr) {}
  virtual ~FuzzArgsProfile();

  FuzzArgsProfile(const FuzzArgsProfile& from);
  FuzzArgsProfile(FuzzArgsProfile&& from) noexcept
    : FuzzArgsProfile() {
    *this = ::std::move(from);
  }

  inline FuzzArgsProfile& operator=(const FuzzArgsProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline FuzzArgsProfile& operator=(FuzzArgsProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FuzzArgsProfile& default_instance();

  static inline const FuzzArgsProfile* internal_default_instance() {
    return reinterpret_cast<const FuzzArgsProfile*>(
               &_FuzzArgsProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FuzzArgsProfile& a, FuzzArgsProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(FuzzArgsProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FuzzArgsProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FuzzArgsProfile* New() const final {
    return CreateMaybeMessage<FuzzArgsProfile>(nullptr);
  }

  FuzzArgsProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FuzzArgsProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FuzzArgsProfile& from);
  void MergeFrom(const FuzzArgsProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FuzzArgsProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AutoFuzz.FuzzArgsProfile";
  }
  protected:
  explicit FuzzArgsProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_FuzzArgsProfile_2eproto);
    return ::descriptor_table_FuzzArgsProfile_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFuzzvar133FieldNumber = 1,
    kFuzzvar134FieldNumber = 2,
    kFuzzvar135FieldNumber = 3,
  };
  // bytes fuzzvar133 = 1;
  void clear_fuzzvar133();
  const std::string& fuzzvar133() const;
  void set_fuzzvar133(const std::string& value);
  void set_fuzzvar133(std::string&& value);
  void set_fuzzvar133(const char* value);
  void set_fuzzvar133(const void* value, size_t size);
  std::string* mutable_fuzzvar133();
  std::string* release_fuzzvar133();
  void set_allocated_fuzzvar133(std::string* fuzzvar133);
  private:
  const std::string& _internal_fuzzvar133() const;
  void _internal_set_fuzzvar133(const std::string& value);
  std::string* _internal_mutable_fuzzvar133();
  public:

  // bytes fuzzvar134 = 2;
  void clear_fuzzvar134();
  const std::string& fuzzvar134() const;
  void set_fuzzvar134(const std::string& value);
  void set_fuzzvar134(std::string&& value);
  void set_fuzzvar134(const char* value);
  void set_fuzzvar134(const void* value, size_t size);
  std::string* mutable_fuzzvar134();
  std::string* release_fuzzvar134();
  void set_allocated_fuzzvar134(std::string* fuzzvar134);
  private:
  const std::string& _internal_fuzzvar134() const;
  void _internal_set_fuzzvar134(const std::string& value);
  std::string* _internal_mutable_fuzzvar134();
  public:

  // uint64 fuzzvar135 = 3;
  void clear_fuzzvar135();
  ::PROTOBUF_NAMESPACE_ID::uint64 fuzzvar135() const;
  void set_fuzzvar135(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fuzzvar135() const;
  void _internal_set_fuzzvar135(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:AutoFuzz.FuzzArgsProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fuzzvar133_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fuzzvar134_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fuzzvar135_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_FuzzArgsProfile_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FuzzArgsProfile

// bytes fuzzvar133 = 1;
inline void FuzzArgsProfile::clear_fuzzvar133() {
  fuzzvar133_.ClearToEmpty();
}
inline const std::string& FuzzArgsProfile::fuzzvar133() const {
  // @@protoc_insertion_point(field_get:AutoFuzz.FuzzArgsProfile.fuzzvar133)
  return _internal_fuzzvar133();
}
inline void FuzzArgsProfile::set_fuzzvar133(const std::string& value) {
  _internal_set_fuzzvar133(value);
  // @@protoc_insertion_point(field_set:AutoFuzz.FuzzArgsProfile.fuzzvar133)
}
inline std::string* FuzzArgsProfile::mutable_fuzzvar133() {
  // @@protoc_insertion_point(field_mutable:AutoFuzz.FuzzArgsProfile.fuzzvar133)
  return _internal_mutable_fuzzvar133();
}
inline const std::string& FuzzArgsProfile::_internal_fuzzvar133() const {
  return fuzzvar133_.Get();
}
inline void FuzzArgsProfile::_internal_set_fuzzvar133(const std::string& value) {
  
  fuzzvar133_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FuzzArgsProfile::set_fuzzvar133(std::string&& value) {
  
  fuzzvar133_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AutoFuzz.FuzzArgsProfile.fuzzvar133)
}
inline void FuzzArgsProfile::set_fuzzvar133(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fuzzvar133_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AutoFuzz.FuzzArgsProfile.fuzzvar133)
}
inline void FuzzArgsProfile::set_fuzzvar133(const void* value,
    size_t size) {
  
  fuzzvar133_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AutoFuzz.FuzzArgsProfile.fuzzvar133)
}
inline std::string* FuzzArgsProfile::_internal_mutable_fuzzvar133() {
  
  return fuzzvar133_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FuzzArgsProfile::release_fuzzvar133() {
  // @@protoc_insertion_point(field_release:AutoFuzz.FuzzArgsProfile.fuzzvar133)
  return fuzzvar133_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FuzzArgsProfile::set_allocated_fuzzvar133(std::string* fuzzvar133) {
  if (fuzzvar133 != nullptr) {
    
  } else {
    
  }
  fuzzvar133_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fuzzvar133,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AutoFuzz.FuzzArgsProfile.fuzzvar133)
}

// bytes fuzzvar134 = 2;
inline void FuzzArgsProfile::clear_fuzzvar134() {
  fuzzvar134_.ClearToEmpty();
}
inline const std::string& FuzzArgsProfile::fuzzvar134() const {
  // @@protoc_insertion_point(field_get:AutoFuzz.FuzzArgsProfile.fuzzvar134)
  return _internal_fuzzvar134();
}
inline void FuzzArgsProfile::set_fuzzvar134(const std::string& value) {
  _internal_set_fuzzvar134(value);
  // @@protoc_insertion_point(field_set:AutoFuzz.FuzzArgsProfile.fuzzvar134)
}
inline std::string* FuzzArgsProfile::mutable_fuzzvar134() {
  // @@protoc_insertion_point(field_mutable:AutoFuzz.FuzzArgsProfile.fuzzvar134)
  return _internal_mutable_fuzzvar134();
}
inline const std::string& FuzzArgsProfile::_internal_fuzzvar134() const {
  return fuzzvar134_.Get();
}
inline void FuzzArgsProfile::_internal_set_fuzzvar134(const std::string& value) {
  
  fuzzvar134_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FuzzArgsProfile::set_fuzzvar134(std::string&& value) {
  
  fuzzvar134_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:AutoFuzz.FuzzArgsProfile.fuzzvar134)
}
inline void FuzzArgsProfile::set_fuzzvar134(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fuzzvar134_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:AutoFuzz.FuzzArgsProfile.fuzzvar134)
}
inline void FuzzArgsProfile::set_fuzzvar134(const void* value,
    size_t size) {
  
  fuzzvar134_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:AutoFuzz.FuzzArgsProfile.fuzzvar134)
}
inline std::string* FuzzArgsProfile::_internal_mutable_fuzzvar134() {
  
  return fuzzvar134_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FuzzArgsProfile::release_fuzzvar134() {
  // @@protoc_insertion_point(field_release:AutoFuzz.FuzzArgsProfile.fuzzvar134)
  return fuzzvar134_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FuzzArgsProfile::set_allocated_fuzzvar134(std::string* fuzzvar134) {
  if (fuzzvar134 != nullptr) {
    
  } else {
    
  }
  fuzzvar134_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fuzzvar134,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:AutoFuzz.FuzzArgsProfile.fuzzvar134)
}

// uint64 fuzzvar135 = 3;
inline void FuzzArgsProfile::clear_fuzzvar135() {
  fuzzvar135_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FuzzArgsProfile::_internal_fuzzvar135() const {
  return fuzzvar135_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FuzzArgsProfile::fuzzvar135() const {
  // @@protoc_insertion_point(field_get:AutoFuzz.FuzzArgsProfile.fuzzvar135)
  return _internal_fuzzvar135();
}
inline void FuzzArgsProfile::_internal_set_fuzzvar135(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  fuzzvar135_ = value;
}
inline void FuzzArgsProfile::set_fuzzvar135(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fuzzvar135(value);
  // @@protoc_insertion_point(field_set:AutoFuzz.FuzzArgsProfile.fuzzvar135)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace AutoFuzz

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_FuzzArgsProfile_2eproto
